version: '3'
services:
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: dst_airliness
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb_data:/data/db

  mysql:
    image: mysql
    container_name: mysql
    environment:
      MYSQL_DATABASE: dst_airliness
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-containers
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - "8888:80"
    depends_on:
      - mysql

  my-python-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "27018:27018"  # Modification du port pour éviter le conflit avec MongoDB
    container_name: my-python-app
    depends_on:
      - mongodb

  delay-insertion:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "27019:27018"  # Modification du port pour éviter le conflit avec my-python-app
    container_name: delay-insertion
    command: python /app/insert_delay_data.py
    depends_on:
      - mongodb

  airlines-insertion:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3308:3306"  # Modification du port pour éviter le conflit avec MySQL
    container_name: airlines-insertion
    command: python /app/insert_airlines_data.py
    depends_on:
      - mysql

  airports-insertion:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3309:3306"  # Modification du port pour éviter le conflit avec MySQL
    container_name: airports-insertion
    command: python /app/insert_airports_data.py
    depends_on:
      - mysql

  flask-app:
      build:
        context: ./map
        dockerfile: Dockerfile
      container_name: flask-app
      ports:
        - "5000:5000"
      depends_on:
        - mongodb
